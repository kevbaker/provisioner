pid              logs/nginx.pid;
user             www-data;
worker_processes 1;

events {
  worker_connections 1024;
}

http {

  ##
  # Mime types
  include      mime.types;
  default_type application/octet-stream;

  ##
  # Size Limits
  client_body_buffer_size     8k;
  client_header_buffer_size   1k;
  client_max_body_size        10m;
  large_client_header_buffers 1 1k;

  ##
  # Timeouts
  client_body_timeout   5;
  client_header_timeout 5;
  keepalive_timeout     5 5;
  send_timeout          5;

  ##
  # General Options
  ignore_invalid_headers   on;
  limit_zone               gulag $binary_remote_addr 1m;
  recursive_error_pages    on;
  sendfile                 on;
  server_name_in_redirect  off;
  server_tokens            off;

  ##
  # TCP Options
  tcp_nodelay on;
  tcp_nopush  on;

  ##
  # Compression
  gzip              on;
  gzip_buffers      16 8k;
  gzip_comp_level   9;
  gzip_http_version 1.0;
  gzip_min_length   0;
  gzip_types        text/plain text/css application/x-javascript application/xml application/xml+rss text/javascript;
  gzip_vary         on;

  ##
  # Log Format
  log_format  main  '$remote_addr $host $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" "$http_user_agent" "$gzip_ratio"';

  ##
  # App Server Cluster
  upstream app_server_cluster {
    server 127.0.0.1:3001;
    server 127.0.0.1:3002;
    server 127.0.0.1:3003;
  }

  ##
  # HTTP Server http://example.com/

  server {
    # To redirect all requests to HTTPS
    #
    # listen       80;
    # server_name  example.com www.example;
    # rewrite      ^(.*) https://$server_name$1 permanent;

    # If using redirection, remove the rest of this server {} block
    # and uncomment the 443 server {} block
    listen       80;
    server_name  example.com www.example;
    root         /var/applications/example/public;

    access_log   /var/nginx/log/nginx-access.log;
    error_log    /var/nginx/log/nginx-error.log;

    location / {
      proxy_set_header  X-Real-IP  $remote_addr;
      proxy_set_header  X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header Host $http_host;
      proxy_redirect off;

      if (-f $request_filename/index.html) {
        rewrite (.*) $1/index.html break;
      }

      if (-f $request_filename.html) {
        rewrite (.*) $1.html break;
      }

      if (!-f $request_filename) {
        proxy_pass http://app_server_cluster;
        break;
      }
    }
  }

  ##
  # HTTPS Server https://example.com/
  # server {
  #   listen                443;
  #
  #   server_name           example.com;
  #   root                  /var/applications/example/public;
  #
  #   access_log            /var/nginx/log/nginx-access.log;
  #   error_log             /var/nginx/log/nginx-error.log;
  #
  #   ssl                   on;
  #   ssl_certificate       /etc/ssl/example_com.crt;
  #   ssl_certificate_key   /etc/ssl/example.com.key;
  #
  #   location / {
  #     proxy_set_header  X-Real-IP  $remote_addr;
  #     proxy_set_header  X-Forwarded-For $proxy_add_x_forwarded_for;
  #     proxy_set_header Host $http_host;
  #     proxy_redirect off;
  #
  #     if (-f $request_filename/index.html) {
  #       rewrite (.*) $1/index.html break;
  #     }
  #
  #     if (-f $request_filename.html) {
  #       rewrite (.*) $1.html break;
  #     }
  #
  #     if (!-f $request_filename) {
  #       proxy_pass http://app_server_cluster;
  #       break;
  #     }
  #   }
  # }


  ##
  # Load Virtual Hosts Configuration Files (if applicable)
  include sites-enabled/*;

  ##
  # Phusion Passenger Configuration (if using Passenger)
  # passenger_root /usr/local/rvm/gems/unknown/gems/passenger-unknown;
  # passenger_ruby /usr/local/rvm/wrappers/unknown/ruby;
  # passenger_spawn_method   smart-lv2;
  # passenger_min_instances  1;
  # passenger_max_pool_size  6;
  # passenger_pool_idle_time 10;

}